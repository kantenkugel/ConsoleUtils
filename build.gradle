plugins {
    id 'com.jfrog.bintray' version '1.7.3'
    id 'maven-publish'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id 'com.github.ben-manes.versions' version '0.15.0'
}

group 'com.kantenkugel'
archivesBaseName = "ConsoleUtils"
version '1.0'

mainClassName = 'com.kantenkugel.consoleutils.ConsoleUtilTestMain'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    //JNA
    compile 'net.java.dev.jna:jna:4.5.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

bintray {
    user = bintrayUsername
    key = bintrayApiKey
    publications = ["BintrayRelease"]
    pkg {
        repo = 'maven'
        name = 'ConsoleUtils'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/kantenkugel/ConsoleUtils.git'
        publish = true
        version {
            name = project.version
            released = new Date()
        }
    }
}

publishing {
    publications {
        BintrayRelease(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName
            version version
            artifact sourcesJar
        }
    }
}

String getProjectProperty(String propertyName)
{
    String property = ""
    if (hasProperty(propertyName))
    {
        property = this.properties[propertyName]
    }
    return property
}

build {
    dependsOn clean
    dependsOn jar
    dependsOn sourcesJar
    dependsOn shadowJar

    jar.mustRunAfter clean
    shadowJar.mustRunAfter sourcesJar
}

bintrayUpload {
    dependsOn build

    onlyIf { !getProjectProperty("bintrayUsername").empty }
    onlyIf { !getProjectProperty("bintrayApiKey").empty }
}